plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    // querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

subprojects {
    group = 'com.multi-module'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
	apply plugin: 'com.ewerk.gradle.plugins.querydsl'
    apply plugin: 'org.asciidoctor.jvm.convert'

    java {
        sourceCompatibility = '17'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.projectlombok:lombok'

        // querydsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    tasks.named('test') {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    tasks.named('asciidoctor') {
        inputs.dir snippetsDir
        dependsOn test
    }

	// querydsl
    def querydslDir = "$buildDir/generated/querydsl"

    querydsl {
        jpa = true
        querydslSourcesDir = querydslDir
    }

    sourceSets {
        main.java.srcDir querydslDir
    }

    configurations {
        querydsl.extendsFrom compileClasspath
    }

    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }
}


// multi-module setting
project(':core-module') {
    dependencies {
        implementation project(':common-module')
    }
}

project(':api-module') {
    dependencies {
        implementation project(':core-module')
    }
}

project(':admin-module') {
    dependencies {
        implementation project(':core-module')
    }
}

project(':batch-module') {
    dependencies {
        implementation project(':core-module')
    }
}
